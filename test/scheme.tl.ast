(stmts (fun (id cons) (ids (id a) (id b)) (stmts (fun (id f) (ids (id i)) (stmts (if (== (id i) (int 0)) (return (id a))) (return (id b)))) (return (id f)))) (fun (id null) (ids) (stmts)) (fun (id car) (ids (id p)) (stmts (return (tail_call (id p) (exps (int 0)))))) (fun (id cdr) (ids (id p)) (stmts (return (tail_call (id p) (exps (int 1)))))) (fun (id slistToList) (ids (id l)) (stmts (if (== (id l) (id null)) (return (list))) (return (+ (list (call (id car) (exps (id l)))) (call (id slistToList) (exps (call (id cdr) (exps (id l))))))))) (fun (id range) (ids (id n)) (stmts (= (id res) (id null)) (while (> (id n) (int 0)) (stmts (= (id res) (call (id cons) (exps (id n) (id res)))) (= (id n) (- (id n) (int 1))))) (return (id res)))) (fun (id map) (ids (id f) (id l)) (stmts (if (== (id l) (id null)) (return (id null))) (return (tail_call (id cons) (exps (call (id f) (exps (call (id car) (exps (id l))))) (call (id map) (exps (id f) (call (id cdr) (exps (id l)))))))))) (fun (id square) (ids (id n)) (stmts (return (* (id n) (id n))))) (fun (id filter) (ids (id f) (id l)) (stmts (if (== (id l) (id null)) (return (id null))) (if (call (id f) (exps (call (id car) (exps (id l))))) (return (call (id cons) (exps (call (id car) (exps (id l))) (call (id filter) (exps (id f) (call (id cdr) (exps (id l))))))))) (return (tail_call (id filter) (exps (id f) (call (id cdr) (exps (id l)))))))) (fun (id isOdd) (ids (id n)) (stmts (return (== (% (id n) (int 2)) (int 1))))) (fun (id sieve) (ids (id l)) (stmts (if (== (id l) (id null)) (return (id null))) (= (id i) (call (id car) (exps (id l)))) (return (tail_call (id cons) (exps (id i) (call (id sieve) (exps (call (id filter) (exps (fun (id lambda) (ids (id n)) (stmts (return (!= (% (id n) (id i)) (int 0))))) (call (id cdr) (exps (id l)))))))))))) (fun (id flat) (ids (id l)) (stmts (if (== (id l) (id null)) (return (id null))) (return (tail_call (id append) (exps (call (id car) (exps (id l))) (call (id flat) (exps (call (id cdr) (exps (id l)))))))))) (fun (id append) (ids (id l1) (id l2)) (stmts (if (== (id l1) (id null)) (return (id l2))) (return (tail_call (id cons) (exps (call (id car) (exps (id l1))) (call (id append) (exps (call (id cdr) (exps (id l1))) (id l2)))))))) (call (id print) (exps (call (id slistToList) (exps (call (id map) (exps (id square) (call (id range) (exps (int 10))))))))) (call (id print) (exps (call (id slistToList) (exps (call (id filter) (exps (id isOdd) (call (id range) (exps (int 10))))))))) (call (id print) (exps (call (id slistToList) (exps (call (id sieve) (exps (call (id cdr) (exps (call (id range) (exps (int 20))))))))))) (call (id print) (exps (call (id slistToList) (exps (call (id append) (exps (call (id range) (exps (int 4))) (call (id range) (exps (int 5))))))))) (call (id print) (exps (call (id slistToList) (exps (call (id flat) (exps (call (id cons) (exps (call (id range) (exps (int 4))) (call (id cons) (exps (call (id range) (exps (int 5))) (id null))))))))))) (fun (id perm) (ids (id l)) (stmts (if (== (id l) (id null)) (return (call (id cons) (exps (id null) (id null))))) (return (tail_call (id flat) (exps (call (id map) (exps (fun (id lambda) (ids (id x)) (stmts (return (call (id map) (exps (fun (id lambda) (ids (id l)) (stmts (return (call (id cons) (exps (id x) (id l)))))) (call (id perm) (exps (call (id filter) (exps (fun (id lambda) (ids (id y)) (stmts (return (!= (id y) (id x))))) (id l)))))))))) (id l)))))))) (fun (id printSlistOfSlist) (ids (id l)) (stmts (if (== (id l) (id null)) (return (id null))) (call (id print) (exps (call (id slistToList) (exps (call (id car) (exps (id l))))))) (return (tail_call (id printSlistOfSlist) (exps (call (id cdr) (exps (id l)))))))) (call (id printSlistOfSlist) (exps (call (id perm) (exps (call (id range) (exps (int 3))))))))
